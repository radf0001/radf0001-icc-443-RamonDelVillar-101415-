version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proyecto-app
    ports:
      - "8081:8080"
    environment:
      # Solo si usas DB en Docker; si usas tu Postgres local, quita esto
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/proyecto_final_calidad
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=letmein
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks: [ mon_net ]

  db:
    image: postgres:15-alpine
    container_name: proyecto-db
    environment:
      - POSTGRES_DB=proyecto_final_calidad
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=letmein
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [ mon_net ]

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: proyecto-prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    depends_on: [ app ]
    networks: [ mon_net ]

  grafana:
    image: grafana/grafana:11.1.0
    container_name: proyecto-grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3000:3000"
    depends_on: [ prometheus ]
    networks: [ mon_net ]

networks:
  mon_net:

volumes:
  pgdata:
  prom_data:
  grafana_data:
