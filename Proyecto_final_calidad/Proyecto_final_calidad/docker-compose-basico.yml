version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: proyecto-db
    environment:
      POSTGRES_DB: proyecto_final_calidad
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: letmein
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: [mon_net]

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: proyecto-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/proyecto_final_calidad
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: letmein
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks: [mon_net]

  tests:
    image: mcr.microsoft.com/playwright:focal
    container_name: proyecto-tests
    working_dir: /app
    volumes:
      - ./:/app
    depends_on:
      - app
      - db
    entrypoint: >
      sh -c "
        echo 'Esperando que la app est√© UP...';
        until curl -f http://app:8080/actuator/health; do sleep 2; done;
        echo 'App UP, instalando navegadores Playwright...';
        npx playwright install;
        echo 'Dando permisos a gradlew...';
        chmod +x ./gradlew;
        echo 'Ejecutando tests...';
        ./gradlew test
      "
    networks: [mon_net]

networks:
  mon_net:

volumes:
  pgdata:
